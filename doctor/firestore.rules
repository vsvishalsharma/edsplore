rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User Agents collection with questionnaire data
    match /userAgents/{userId} {
      allow read, write: if isOwner(userId);
      
      // Validate questionnaire data structure
      function isValidQuestionnaireData() {
        let data = request.resource.data.questionnaireData;
        return data == null || (
          data.keys().hasAll(['clinicInfo', 'services', 'appointments', 'privacy', 'language']) &&
          data.clinicInfo is map &&
          data.services is map &&
          data.appointments is map &&
          data.privacy is map &&
          data.language is map
        );
      }
      
      allow create: if isOwner(userId) && isValidQuestionnaireData();
      allow update: if isOwner(userId) && isValidQuestionnaireData();
    }
    
    // Tokens collection
    match /tokens/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Subscriptions collection
    match /subscriptions/{userId} {
      allow read, write: if isOwner(userId);
    }
  }
}